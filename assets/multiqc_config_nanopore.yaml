report_comment: >
    This report has been generated by the <a href="https://github.com/nf-core/viralrecon" target="_blank">nf-core/viralrecon</a>
    analysis pipeline. For information about how to interpret these results, please see the
    <a href="https://github.com/nf-core/viralrecon" target="_blank">documentation</a>.

data_format: 'yaml'

run_modules:
    - custom_content
    #- fastqc
    #- kraken
    #- samtools
    #- picard
    #- mosdepth
    #- bcftools
    #- snpeff
    #- quast

exclude_modules:
    - 'general_stats'

# See https://github.com/ewels/MultiQC_TestData/blob/master/data/custom_content/with_config/table_headerconfig/multiqc_config.yaml
custom_data:
    summary_variants_metrics:
        section_name: 'Variant calling metrics'
        description: 'generated by the nf-core/viralrecon pipeline'
        plot_type: 'table'
        pconfig:
            id: 'summary_variants_metrics_plot'
            table_title: 'Variant calling metrics'
            namespace: 'Variant calling metrics'
            format: '{:.0f}'

# module_order:
#     - fastqc:
#         name: 'PREPROCESS: FastQC (raw reads)'
#         anchor: 'fastqc_raw'
#         info: 'This section of the report shows FastQC results for the raw reads before adapter trimming.'
#         path_filters:
#             - './fastqc/*.zip'
#     - kraken:
#         name: 'PREPROCESS: Kraken 2'
#         info: 'This section of the report shows Kraken 2 classification results for reads after adapter trimming with fastp.'
#     - samtools:
#         name: 'VARIANTS: SAMTools (raw)'
#         anchor: 'samtools_bowtie2'
#         info: 'This section of the report shows SAMTools counts/statistics after mapping with Bowtie 2.'
#         path_filters:
#             - './bowtie2/*'
#     - picard:
#         name: 'VARIANTS: Picard Metrics'
#         info: 'This section of the report shows picard CollectMultipleMetrics and MarkDuplicates results after mapping (if "--protocol amplicon" this will be after primer sequence removal with iVar).'
#     - mosdepth:
#         name: 'VARIANTS: mosdepth'
#         info: 'This section of the report shows genome-wide coverage metrics generated by mosdepth.'
#     - bcftools:
#         name: 'VARIANTS: BCFTools (iVar)'
#         anchor: 'bcftools_ivar'
#         info: 'This section of the report shows BCFTools stats results for variants called by iVar.'
#         path_filters:
#             - './variants_ivar/*.txt'
#     - snpeff:
#         name: 'VARIANTS: SnpEff (iVar)'
#         anchor: 'snpeff_ivar'
#         info: 'This section of the report shows SnpEff results for variants called by iVar.'
#         path_filters:
#             - './variants_ivar/*.csv'
#     - quast:
#         name: 'VARIANTS: QUAST (iVar)'
#         anchor: 'quast_ivar'
#         info: 'This section of the report shows QUAST results for consensus sequences generated from variants with iVar.'
#         path_filters:
#             - './variants_ivar/*.tsv'

report_section_order:
    # summary_assembly_metrics:
    #   before: summary_variants_metrics
    # ivar_variants:
    #     before: mosdepth
    software_versions:
        order: -1001
    nf-core-viralrecon-summary:
        order: -1002

bcftools:
    collapse_complementary_changes: true

# extra_fn_clean_exts:
#     - '.kraken2'
#     - '.bowtie2'
#     - '.ivar_trim'
#     - '.mpileup'
#     - '.snpeff'
#     - '.consensus'
#     - '.trim'
#     - '.markduplicates'
#     - '.primer_trim'
#     - '.scaffolds'
#     - '.contigs'

# # Customise the module search patterns to speed up execution time
# #  - Skip module sub-tools that we are not interested in
# #  - Replace file-content searching with filename pattern searching
# #  - Don't add anything that is the same as the MultiQC default
# # See https://multiqc.info/docs/#optimise-file-search-patterns for details
# sp:
#     fastp:
#         fn: '*.fastp.json'
#     bowtie2:
#         fn: '*.bowtie2.log'
#     ivar/trim:
#         fn: '*.ivar.log'
#     mosdepth/global_dist:
#         fn: '*.global.dist.txt'
#     cutadapt:
#         fn: '*.cutadapt.log'
#     picard/alignment_metrics:
#         fn: '*.alignment_summary_metrics'
#     picard/insertsize:
#         fn: '*.insert_size_metrics'
#     picard/markdups:
#         fn: '*.MarkDuplicates.metrics.txt'
#     picard/wgs_metrics:
#         fn: '*.coverage_metrics'
#     picard/basedistributionbycycle:
#         skip: true
#     picard/gcbias:
#         skip: true
#     picard/hsmetrics:
#         skip: true
#     picard/oxogmetrics:
#         skip: true
#     picard/pcr_metrics:
#         skip: true
#     picard/quality_by_cycle:
#         skip: true
#     picard/quality_score_distribution:
#         skip: true
#     picard/quality_yield_metrics:
#         skip: true
#     picard/rnaseqmetrics:
#         skip: true
#     picard/rrbs_metrics:
#         skip: true
#     picard/sam_file_validation:
#         skip: true
#     picard/variant_calling_metrics:
#         skip: true

# See https://github.com/ewels/MultiQC_TestData/blob/master/data/custom_content/with_config/table_headerconfig/multiqc_config.yaml
custom_data:
    fail_no_barcode_samples:
        section_name: 'WARNING: Samples With No Barcode'
        description: "List of samples that were specified in mappings samplesheet via '--input' but didn't have an associated barcode in the '--fastq_dir' folder."
        plot_type: 'table'
        pconfig:
            id: 'fail_no_barcode_samples'
            table_title: 'Samples without barcodes'
            namespace: 'Samples without barcodes'
            format: '{:,.0f}'
    fail_barcode_count_samples:
        section_name: 'WARNING: Fail Barcode Read Count Check'
        description: "List of samples that failed the minimum number of reads required per barcode specified via the '--min_barcode_reads' parameter, and hence were ignored for the downstream processing steps."
        plot_type: 'table'
        pconfig:
            id: 'fail_barcode_count_samples'
            table_title: 'Samples failed barcode read count threshold'
            namespace: 'Samples failed barcode read count threshold'
            format: '{:,.0f}'
    fail_guppyplex_count_samples:
        section_name: 'WARNING: Fail Guppyplex Read Count Check'
        description: "List of samples that failed the minimum number of reads required per sample specified via the '--min_guppyplex_reads' parameter, and hence were ignored for the downstream processing steps."
        plot_type: 'table'
        pconfig:
            id: 'fail_guppyplex_count_samples'
            table_title: 'Samples failed artic guppyplex read count threshold'
            namespace: 'Samples failed artic guppyplex read count threshold'
            format: '{:,.0f}'